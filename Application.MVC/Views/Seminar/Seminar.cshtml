@model IEnumerable<Application.MVC.Models.SeminarViewModel>
@{
    ViewData["Title"] = "Seminar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>List of seminars</h1>

<p>
    @using (Html.BeginForm("", "Seminar", FormMethod.Get))
    {
        <div>
            <b>Search by:&nbsp;&nbsp;</b> @Html.RadioButton("searchBy", "Name", true)<text> Name&nbsp;&nbsp;</text>
            @Html.RadioButton("searchBy", "Description") <text> Description </text><br />
            @Html.TextBox("search")<input type="submit" value="Search" />
            <button style="float:right; background-color:darkcyan; border:0pt" class="btn btn-primary"><a asp-action="Add" style="color:white">Add Seminar</a></button>
        </div>
    }
</p>
@if (Model != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    <button style="color:darkcyan;" onclick="sorting('Name', '@ViewBag.Sorting', '@ViewBag.Search', '@ViewBag.SearchBy', @ViewBag.CurrentPage, @ViewBag.PageSize)">@Html.DisplayNameFor(model => model.Name)</button>
                </th>
                <th>
                    <button style="color:darkcyan;" onclick="sorting('Description', '@ViewBag.Sorting', '@ViewBag.Search', '@ViewBag.SearchBy', @ViewBag.CurrentPage, @ViewBag.PageSize)">@Html.DisplayNameFor(model => model.Description)</button>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ParticipantsCount)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ParticipantsCount)
                    </td>
                    <td>
                        @if (item.ParticipantsCount < 5)
                        {
                            @Html.ActionLink("Register", "Add", "Registration", new { seminarId = item.Id }) <text> |</text>
                        }
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    <div>
        @if (ViewBag.TotalPageCount > 1)
        {
            <ul class="paging">
                @if (ViewBag.CurrentPage > 1)
                {
                    <th>
                        <button style="color:darkcyan;" onclick="paging(1, '@ViewBag.PageSize')">First</button>
                    </th>
                }
                @if (ViewBag.CurrentPage > 1)
                {
                    <th>
                        <button style="color:darkcyan;" onclick="paging(@ViewBag.CurrentPage - 1, '@ViewBag.PageSize' )">@(@ViewBag.CurrentPage - 1)</button>
                    </th>
                }
                <th>
                    <button style="color:gray;">@ViewBag.CurrentPage</button>
                </th>
                @if (ViewBag.CurrentPage < ViewBag.TotalPageCount)
                {
                    <th>
                        <button style="color:darkcyan;" onclick="paging(@ViewBag.CurrentPage + 1, @ViewBag.PageSize )">@(@ViewBag.CurrentPage + 1)</button>
                    </th>
                }
                @if (ViewBag.CurrentPage < ViewBag.TotalPageCount)
                {
                    <th>
                        <button style="color:darkcyan;" onclick="paging(@ViewBag.TotalPageCount, '@ViewBag.PageSize')">Last</button>
                    </th>
                }
            </ul>
        }
    </div>
    <script>
        var sorting = function (sortBy, sortOrder, search, searchBy, pageNumber, pageSize) {
            if (sortOrder == "desc")
            {
                if (sortBy == "Name")
                {
                    window.location.replace("https://localhost:44353/Seminar?" + "sortBy=Name&sortOrder=asc" + ("&pageNumber=" + pageNumber) + ("&pageSize=" + pageSize) + (searchBy ? "&searchBy=" + searchBy : "") + (search ? "&search=" + search : ""));
                }
                else
                {
                    window.location.replace("https://localhost:44353/Seminar?" + "sortBy=Description&sortOrder=asc" + ("&pageNumber=" + pageNumber) + ("&pageSize=" + pageSize) +(searchBy ? "&searchBy=" + searchBy : "") + (search ? "&search=" + search : ""));
                }
            }
            else {
                if (sortBy == "Name")
                {
                    window.location.replace("https://localhost:44353/Seminar?" + "sortBy=Name&sortOrder=desc" + ("&pageNumber=" + pageNumber) + ("&pageSize=" + pageSize) +(searchBy ? "&searchBy=" + searchBy : "") + (search ? "&search=" + search : ""));
                }
                else
                {
                    window.location.replace("https://localhost:44353/Seminar?" + "sortBy=Description&sortOrder=desc" + ("&pageNumber=" + pageNumber) + ("&pageSize=" + pageSize) +(searchBy ? "&searchBy=" + searchBy : "") + (search ? "&search=" + search : ""));
                }
            };
        };

    var paging = function (pageNumber, pageSize)
        {
        '@ViewBag.Sorting' === 'asc' ? sorting('@ViewBag.SortBy', 'desc', '@ViewBag.Search', '@ViewBag.SearchBy', pageNumber, pageSize) : sorting('@ViewBag.SortBy', 'asc', '@ViewBag.Search', '@ViewBag.SearchBy', pageNumber, pageSize);
        }
    </script>  
}

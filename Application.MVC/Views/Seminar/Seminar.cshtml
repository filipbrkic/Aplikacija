@model IEnumerable<Application.MVC.Models.SeminarViewModel>

@{
    ViewData["Title"] = "Seminar";
}

<h1>List of seminars</h1>

<p>
    <a asp-action="Add">Create New</a>
</p>
<form asp-action="Seminar" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Seminar">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParticipantsCount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParticipantsCount)
            </td>
            <td>
                @Html.ActionLink("Register", "Add", "Registration", new { seminarId = item.Id }) |
                @Html.ActionLink("Edit", "Edit", new { id=item.Id  }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
<div>
    @if (ViewBag.TotalPageCount > 1)
    {
        <ul class="pagination">
            @if (ViewBag.CurrentPage > 1)
            {
                <th>
                    <button style="color:darkcyan;" onclick="paging(1, '@ViewBag.PageSize')">First</button>
                </th>
            }
            @if (ViewBag.CurrentPage > 1)
            {
                <th>
                    <button style="color:darkcyan;" onclick="paging(@ViewBag.CurrentPage - 1, '@ViewBag.PageSize' )">@(@ViewBag.CurrentPage - 1)</button>
                </th>
            }
            <th>
                <button style="color:gray;">@ViewBag.CurrentPage</button>
            </th>
            @if (ViewBag.CurrentPage < ViewBag.TotalPageCount)
            {
                <th>
                    <button style="color:darkcyan;" onclick="paging(@ViewBag.CurrentPage + 1, @ViewBag.PageSize )">@(@ViewBag.CurrentPage + 1)</button>
                </th>
            }
            @if (ViewBag.CurrentPage < ViewBag.TotalPageCount)
            {
                <th>
                    <button style="color:darkcyan;" onclick="paging(@ViewBag.TotalPageCount, '@ViewBag.PageSize')">Last</button>
                </th>
            }
        </ul>
    }
</div>

<script>
    var paging = function (page, pageSize)
        {
            '@ViewBag.Sorting' === 'asc' ? sorting('@ViewBag.SortBy', 'desc', '@ViewBag.Search', searchString, page, pageSize) : sorting('@ViewBag.SortBy', 'asc', searchString, '@ViewBag.SearchBy', page, pageSize);
        }
</script>
